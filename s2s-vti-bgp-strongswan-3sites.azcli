rg=strongswan-s2s-bgp-3sites
location=centralindia

site1_vnet_name=site1
site1_vnet_address=10.1.0.0/16
site1_gw_subnet_name=gw
site1_gw_subnet_address=10.1.0.0/24
site1_gw_asn=65501
site1_gw_vti0=10.1.0.250
site1_vm_subnet_name=vm
site1_vm_subnet_address=10.1.1.0/24
s1spoke_vnet_name=s1spoke
s1spoke_vnet_address=10.11.0.0/24
s1spoke_vm_subnet_name=vm
s1spoke_vm_subnet_address=10.11.0.0/24

site2_vnet_name=site2
site2_vnet_address=10.2.0.0/16
site2_gw_subnet_name=gw
site2_gw_subnet_address=10.2.0.0/24
site2_gw_asn=65502
site2_gw_vti0=10.2.0.250
site2_vm_subnet_name=vm
site2_vm_subnet_address=10.2.1.0/24
s2spoke_vnet_name=s2spoke
s2spoke_vnet_address=10.12.0.0/24
s2spoke_vm_subnet_name=vm
s2spoke_vm_subnet_address=10.12.0.0/24

site3_vnet_name=site3
site3_vnet_address=10.3.0.0/16
site3_gw_subnet_name=gw
site3_gw_subnet_address=10.3.0.0/24
site3_gw_asn=65503
site3_gw_vti0=10.3.0.250
site3_vm_subnet_name=vm
site3_vm_subnet_address=10.3.1.0/24
s3spoke_vnet_name=s3spoke
s3spoke_vnet_address=10.13.0.0/24
s3spoke_vm_subnet_name=vm
s3spoke_vm_subnet_address=10.12\3.0.0/24

advertised_address1=1.1.1.1/32
advertised_address2=2.2.2.2/32
advertised_address3=3.3.3.3/32
admin_username=$(whoami)
myip=$(curl -s4 https://ifconfig.co/)
psk=secret12345
vm_size=Standard_B2ats_v2

cloudinit_file=cloudinit.txt
cat <<EOF > $cloudinit_file
#cloud-config
runcmd:
  - curl -s https://deb.frrouting.org/frr/keys.gpg | sudo tee /usr/share/keyrings/frrouting.gpg > /dev/null
  - echo deb [signed-by=/usr/share/keyrings/frrouting.gpg] https://deb.frrouting.org/frr \$(lsb_release -s -c) frr-stable | sudo tee -a /etc/apt/sources.list.d/frr.list
  - sudo apt update && sudo apt install -y frr frr-pythontools
  - sudo apt install -y strongswan inetutils-traceroute net-tools
  - sudo sed -i "/bgpd=no/ s//bgpd=yes/" /etc/frr/daemons
  - sudo service frr restart
  - sudo systemctl enable ipsec
  - cp /etc/ipsec.conf /etc/ipsec.conf.bak
  - cp /etc/ipsec.secrets /etc/ipsec.secrets.bak
  - echo "net.ipv4.conf.all.forwarding=1" | sudo tee -a /etc/sysctl.conf
  - echo "net.ipv4.conf.default.forwarding=1" | sudo tee -a /etc/sysctl.conf
  - sudo sysctl -p
EOF

function first_ip(){
    subnet=$1
    IP=$(echo $subnet | cut -d/ -f 1)
    IP_HEX=$(printf '%.2X%.2X%.2X%.2X\n' `echo $IP | sed -e 's/\./ /g'`)
    NEXT_IP_HEX=$(printf %.8X `echo $(( 0x$IP_HEX + 1 ))`)
    NEXT_IP=$(printf '%d.%d.%d.%d\n' `echo $NEXT_IP_HEX | sed -r 's/(..)/0x\1 /g'`)
    echo "$NEXT_IP"
}

# Resource Groups
echo -e "\e[1;36mCreating $rg Resource Group...\e[0m"
az group create -l $location -n $rg -o none

# site1 vnet
echo -e "\e[1;36mCreating $site1_vnet_name VNet...\e[0m"
az network vnet create -g $rg -n $site1_vnet_name -l $location --address-prefixes $site1_vnet_address --subnet-name $site1_vm_subnet_name --subnet-prefixes $site1_vm_subnet_address -o none
az network vnet subnet create -g $rg -n $site1_gw_subnet_name --address-prefixes $site1_gw_subnet_address --vnet-name $site1_vnet_name -o none

# site2 vnet
echo -e "\e[1;36mCreating $site2_vnet_name VNet...\e[0m"
az network vnet create -g $rg -n $site2_vnet_name -l $location --address-prefixes $site2_vnet_address --subnet-name $site2_vm_subnet_name --subnet-prefixes $site2_vm_subnet_address -o none
az network vnet subnet create -g $rg -n $site2_gw_subnet_name --address-prefixes $site2_gw_subnet_address --vnet-name $site2_vnet_name -o none

# site3 vnet
echo -e "\e[1;36mCreating $site3_vnet_name VNet...\e[0m"
az network vnet create -g $rg -n $site3_vnet_name -l $location --address-prefixes $site3_vnet_address --subnet-name $site3_vm_subnet_name --subnet-prefixes $site3_vm_subnet_address -o none
az network vnet subnet create -g $rg -n $site3_gw_subnet_name --address-prefixes $site3_gw_subnet_address --vnet-name $site3_vnet_name -o none

# site1 gw vm
echo -e "\e[1;36mDeploying $site1_vnet_name-gw VM...\e[0m"
az network public-ip create -g $rg -n $site1_vnet_name-gw -l $location --allocation-method Static --sku Basic -o none
az network nic create -g $rg -n $site1_vnet_name-gw -l $location --vnet-name $site1_vnet_name --subnet $site1_gw_subnet_name --ip-forwarding true --public-ip-address $site1_vnet_name-gw -o none
az vm create -g $rg -n $site1_vnet_name-gw -l $location --image Ubuntu2404 --nics $site1_vnet_name-gw --os-disk-name $site1_vnet_name-gw --size $vm_size --admin-username $admin_username --generate-ssh-keys --custom-data $cloudinit_file --no-wait
# site1 gw details
site1_gw_pubip=$(az network public-ip show -g $rg -n $site1_vnet_name-gw --query ipAddress -o tsv | tr -d '\r') && echo $site1_vnet_name-gw public ip: $site1_gw_pubip
site1_gw_private_ip=$(az network nic show -g $rg -n $site1_vnet_name-gw --query ipConfigurations[].privateIPAddress -o tsv | tr -d '\r')  && echo $site1_vnet_name-gw private ip: $site1_gw_private_ip
site1_gw_nic_default_gw=$(first_ip $site1_gw_subnet_address) && echo $site1_vnet_name-gw default gateway ip: $site1_gw_nic_default_gw

# site2 gw vm
echo -e "\e[1;36mDeploying $site2_vnet_name-gw VM...\e[0m"
az network public-ip create -g $rg -n $site2_vnet_name-gw -l $location --allocation-method Static --sku Basic -o none
az network nic create -g $rg -n $site2_vnet_name-gw -l $location --vnet-name $site2_vnet_name --subnet $site2_gw_subnet_name --ip-forwarding true --public-ip-address $site2_vnet_name-gw -o none
az vm create -g $rg -n $site2_vnet_name-gw -l $location --image Ubuntu2404 --nics $site2_vnet_name-gw --os-disk-name $site2_vnet_name-gw --size $vm_size --admin-username $admin_username --generate-ssh-keys --custom-data $cloudinit_file --no-wait
# site2 gw details
site2_gw_pubip=$(az network public-ip show -g $rg -n $site2_vnet_name-gw --query ipAddress -o tsv | tr -d '\r') && echo $site2_vnet_name-gw public ip: $site2_gw_pubip
site2_gw_private_ip=$(az network nic show -g $rg -n $site2_vnet_name-gw --query ipConfigurations[].privateIPAddress -o tsv | tr -d '\r')  && echo $site2_vnet_name-gw private ip: $site2_gw_private_ip
site2_gw_nic_default_gw=$(first_ip $site2_gw_subnet_address) && echo $site2_vnet_name-gw default gateway ip: $site2_gw_nic_default_gw

# site3 gw vm
echo -e "\e[1;36mDeploying $site3_vnet_name-gw VM...\e[0m"
az network public-ip create -g $rg -n $site3_vnet_name-gw -l $location --allocation-method Static --sku Basic -o none
az network nic create -g $rg -n $site3_vnet_name-gw -l $location --vnet-name $site3_vnet_name --subnet $site3_gw_subnet_name --ip-forwarding true --public-ip-address $site3_vnet_name-gw -o none
az vm create -g $rg -n $site3_vnet_name-gw -l $location --image Ubuntu2404 --nics $site3_vnet_name-gw --os-disk-name $site3_vnet_name-gw --size $vm_size --admin-username $admin_username --generate-ssh-keys --custom-data $cloudinit_file --no-wait
# site3 gw details
site3_gw_pubip=$(az network public-ip show -g $rg -n $site3_vnet_name-gw --query ipAddress -o tsv | tr -d '\r') && echo $site3_vnet_name-gw public ip: $site3_gw_pubip
site3_gw_private_ip=$(az network nic show -g $rg -n $site3_vnet_name-gw --query ipConfigurations[].privateIPAddress -o tsv | tr -d '\r')  && echo $site3_vnet_name-gw private ip: $site3_gw_private_ip
site3_gw_nic_default_gw=$(first_ip $site3_gw_subnet_address) && echo $site3_vnet_name-gw default gateway ip: $site3_gw_nic_default_gw

# s1spoke vnet
echo -e "\e[1;36mCreating $s1spoke_vnet_name VNet...\e[0m"
az network vnet create -g $rg -n $s1spoke_vnet_name -l $location --address-prefixes $s1spoke_vnet_address --subnet-name $s1spoke_vm_subnet_name --subnet-prefixes $s1spoke_vm_subnet_address -o none

# s2spoke vnet
echo -e "\e[1;36mCreating $s2spoke_vnet_name VNet...\e[0m"
az network vnet create -g $rg -n $s2spoke_vnet_name -l $location --address-prefixes $s2spoke_vnet_address --subnet-name $s2spoke_vm_subnet_name --subnet-prefixes $s2spoke_vm_subnet_address -o none

# s3spoke vnet
echo -e "\e[1;36mCreating $s3spoke_vnet_name VNet...\e[0m"
az network vnet create -g $rg -n $s3spoke_vnet_name -l $location --address-prefixes $s3spoke_vnet_address --subnet-name $s3spoke_vm_subnet_name --subnet-prefixes $s3spoke_vm_subnet_address -o none

# site1 spoke vnet peering
echo -e "\e[1;36mCreating $s1spoke_vnet_name VNet peering...\e[0m"
az network vnet peering create -g $rg --name $s1spoke_vnet_name-to-$site1_vnet_name --vnet-name $s1spoke_vnet_name --remote-vnet $site1_vnet_name --allow-vnet-access --allow-forwarded-traffic -o none
az network vnet peering create -g $rg --name $site1_vnet_name-to-$s1spoke_vnet_name --vnet-name $site1_vnet_name --remote-vnet $s1spoke_vnet_name --allow-vnet-access --allow-forwarded-traffic -o none

# site2 spoke vnet peering
echo -e "\e[1;36mCreating $s2spoke_vnet_name VNet peering...\e[0m"
az network vnet peering create -g $rg --name $s2spoke_vnet_name-to-$site2_vnet_name --vnet-name $s2spoke_vnet_name --remote-vnet $site2_vnet_name --allow-vnet-access --allow-forwarded-traffic -o none
az network vnet peering create -g $rg --name $site2_vnet_name-to-$s2spoke_vnet_name --vnet-name $site2_vnet_name --remote-vnet $s2spoke_vnet_name --allow-vnet-access --allow-forwarded-traffic -o none

# site3 spoke vnet peering
echo -e "\e[1;36mCreating $s3spoke_vnet_name VNet peering...\e[0m"
az network vnet peering create -g $rg --name $s3spoke_vnet_name-to-$site3_vnet_name --vnet-name $s3spoke_vnet_name --remote-vnet $site3_vnet_name --allow-vnet-access --allow-forwarded-traffic -o none
az network vnet peering create -g $rg --name $site3_vnet_name-to-$s3spoke_vnet_name --vnet-name $site3_vnet_name --remote-vnet $s3spoke_vnet_name --allow-vnet-access --allow-forwarded-traffic -o none

# site1 vm
echo -e "\e[1;36mDeploying $site1_vnet_name VM...\e[0m"
az network nic create -g $rg -n $site1_vnet_name -l $location --vnet-name $site1_vnet_name --subnet $site1_vm_subnet_name -o none
az vm create -g $rg -n $site1_vnet_name -l $location --image Ubuntu2404 --nics $site1_vnet_name --os-disk-name $site1_vnet_name --size $vm_size --admin-username $admin_username --generate-ssh-keys --no-wait
site1_vm_ip=$(az network nic show -g $rg -n $site1_vnet_name --query ipConfigurations[0].privateIPAddress -o tsv | tr -d '\r') && echo $site1_vnet_name vm private ip: $site1_vm_ip

# s1spoke vm
echo -e "\e[1;36mDeploying $s1spoke_vnet_name VM...\e[0m"
az network nic create -g $rg -n $s1spoke_vnet_name -l $location --vnet-name $s1spoke_vnet_name --subnet $s1spoke_vm_subnet_name -o none
az vm create -g $rg -n $s1spoke_vnet_name -l $location --image Ubuntu2404 --nics $s1spoke_vnet_name --os-disk-name $s1spoke_vnet_name --size $vm_size --admin-username $admin_username --generate-ssh-keys --no-wait
s1spoke_vm_ip=$(az network nic show -g $rg -n $s1spoke_vnet_name --query ipConfigurations[0].privateIPAddress -o tsv | tr -d '\r') && echo $s1spoke_vnet_name vm private ip: $s1spoke_vm_ip

# site2 vm
echo -e "\e[1;36mDeploying $site2_vnet_name VM...\e[0m"
az network nic create -g $rg -n $site2_vnet_name -l $location --vnet-name $site2_vnet_name --subnet $site2_vm_subnet_name -o none
az vm create -g $rg -n $site2_vnet_name -l $location --image Ubuntu2404 --nics $site2_vnet_name --os-disk-name $site2_vnet_name --size $vm_size --admin-username $admin_username --generate-ssh-keys --no-wait
site2_vm_ip=$(az network nic show -g $rg -n $site2_vnet_name --query ipConfigurations[0].privateIPAddress -o tsv | tr -d '\r') && echo $site2_vnet_name vm private ip: $site2_vm_ip

# s2spoke vm
echo -e "\e[1;36mDeploying $s2spoke_vnet_name VM...\e[0m"
az network nic create -g $rg -n $s2spoke_vnet_name -l $location --vnet-name $s2spoke_vnet_name --subnet $s2spoke_vm_subnet_name -o none
az vm create -g $rg -n $s2spoke_vnet_name -l $location --image Ubuntu2404 --nics $s2spoke_vnet_name --os-disk-name $s2spoke_vnet_name --size $vm_size --admin-username $admin_username --generate-ssh-keys --no-wait
s2spoke_vm_ip=$(az network nic show -g $rg -n $s2spoke_vnet_name --query ipConfigurations[0].privateIPAddress -o tsv | tr -d '\r') && echo $s2spoke_vnet_name vm private ip: $s2spoke_vm_ip

# site3 vm
echo -e "\e[1;36mDeploying $site3_vnet_name VM...\e[0m"
az network nic create -g $rg -n $site3_vnet_name -l $location --vnet-name $site3_vnet_name --subnet $site3_vm_subnet_name -o none
az vm create -g $rg -n $site3_vnet_name -l $location --image Ubuntu2404 --nics $site3_vnet_name --os-disk-name $site3_vnet_name --size $vm_size --admin-username $admin_username --generate-ssh-keys --no-wait
site3_vm_ip=$(az network nic show -g $rg -n $site3_vnet_name --query ipConfigurations[0].privateIPAddress -o tsv | tr -d '\r') && echo $site3_vnet_name vm private ip: $site3_vm_ip

# s3spoke vm
echo -e "\e[1;36mDeploying $s3spoke_vnet_name VM...\e[0m"
az network nic create -g $rg -n $s3spoke_vnet_name -l $location --vnet-name $s3spoke_vnet_name --subnet $s3spoke_vm_subnet_name -o none
az vm create -g $rg -n $s3spoke_vnet_name -l $location --image Ubuntu2404 --nics $s3spoke_vnet_name --os-disk-name $s3spoke_vnet_name --size $vm_size --admin-username $admin_username --generate-ssh-keys --no-wait
s3spoke_vm_ip=$(az network nic show -g $rg -n $s3spoke_vnet_name --query ipConfigurations[0].privateIPAddress -o tsv | tr -d '\r') && echo $s3spoke_vnet_name vm private ip: $s3spoke_vm_ip

# site1 route table
echo -e "\e[1;36mDeploying $site1_vnet_name route table and attaching it to $site1_vm_subnet_name subnet...\e[0m"
az network route-table create -n $site1_vnet_name -g $rg -l $location -o none
az network route-table route create --address-prefix $site2_vnet_address -n to-$site2_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $site1_vnet_name --next-hop-ip-address $site1_gw_private_ip -o none
az network route-table route create --address-prefix $site3_vnet_address -n to-$site3_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $site1_vnet_name --next-hop-ip-address $site1_gw_private_ip -o none
az network vnet subnet update --vnet-name $site1_vnet_name -n $site1_vm_subnet_name --route-table $site1_vnet_name -g $rg -o none

# s1spoke route table
echo -e "\e[1;36mDeploying $s1spoke_vnet_name route table and attaching it to $s1spoke_vm_subnet_name subnet...\e[0m"
az network route-table create -n $s1spoke_vnet_name -g $rg -l $location -o none
az network route-table route create --address-prefix $site2_vnet_address -n to-$site2_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $s1spoke_vnet_name --next-hop-ip-address $site1_gw_private_ip -o none
az network route-table route create --address-prefix $site3_vnet_address -n to-$site3_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $s1spoke_vnet_name --next-hop-ip-address $site1_gw_private_ip -o none
az network route-table route create --address-prefix $s2spoke_vnet_address -n to-$s2spoke_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $s1spoke_vnet_name --next-hop-ip-address $site1_gw_private_ip -o none
az network route-table route create --address-prefix $s3spoke_vnet_address -n to-$s3spoke_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $s1spoke_vnet_name --next-hop-ip-address $site1_gw_private_ip -o none
az network vnet subnet update --vnet-name $s1spoke_vnet_name -n $s1spoke_vm_subnet_name --route-table $s1spoke_vnet_name -g $rg -o none

# site2 route table
echo -e "\e[1;36mDeploying $site2_vnet_name route table and attaching it to $site2_vm_subnet_name subnet...\e[0m"
az network route-table create -n $site2_vnet_name -g $rg -l $location -o none
az network route-table route create --address-prefix $site1_vnet_address -n to-$site1_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $site2_vnet_name --next-hop-ip-address $site2_gw_private_ip -o none
az network route-table route create --address-prefix $site3_vnet_address -n to-$site3_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $site2_vnet_name --next-hop-ip-address $site2_gw_private_ip -o none
az network vnet subnet update --vnet-name $site2_vnet_name -n $site2_vm_subnet_name --route-table $site2_vnet_name -g $rg -o none

# s2spoke route table
echo -e "\e[1;36mDeploying $s2spoke_vnet_name route table and attaching it to $s2spoke_vm_subnet_name subnet...\e[0m"
az network route-table create -n $s2spoke_vnet_name -g $rg -l $location -o none
az network route-table route create --address-prefix $site1_vnet_address -n to-$site1_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $s2spoke_vnet_name --next-hop-ip-address $site2_gw_private_ip -o none
az network route-table route create --address-prefix $site3_vnet_address -n to-$site3_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $s2spoke_vnet_name --next-hop-ip-address $site2_gw_private_ip -o none
az network route-table route create --address-prefix $s1spoke_vnet_address -n to-$s1spoke_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $s2spoke_vnet_name --next-hop-ip-address $site2_gw_private_ip -o none
az network route-table route create --address-prefix $s3spoke_vnet_address -n to-$s3spoke_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $s2spoke_vnet_name --next-hop-ip-address $site2_gw_private_ip -o none
az network vnet subnet update --vnet-name $s2spoke_vnet_name -n $s2spoke_vm_subnet_name --route-table $s2spoke_vnet_name -g $rg -o none

# site3 route table
echo -e "\e[1;36mDeploying $site3_vnet_name route table and attaching it to $site3_vm_subnet_name subnet...\e[0m"
az network route-table create -n $site3_vnet_name -g $rg -l $location -o none
az network route-table route create --address-prefix $site1_vnet_address -n to-$site1_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $site3_vnet_name --next-hop-ip-address $site3_gw_private_ip -o none
az network route-table route create --address-prefix $site2_vnet_address -n to-$site2_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $site3_vnet_name --next-hop-ip-address $site3_gw_private_ip -o none
az network vnet subnet update --vnet-name $site3_vnet_name -n $site3_vm_subnet_name --route-table $site3_vnet_name -g $rg -o none

# s3spoke route table
echo -e "\e[1;36mDeploying $s3spoke_vnet_name route table and attaching it to $s3spoke_vm_subnet_name subnet...\e[0m"
az network route-table create -n $s3spoke_vnet_name -g $rg -l $location -o none
az network route-table route create --address-prefix $site1_vnet_address -n to-$site1_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $s3spoke_vnet_name --next-hop-ip-address $site3_gw_private_ip -o none
az network route-table route create --address-prefix $site2_vnet_address -n to-$site2_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $s3spoke_vnet_name --next-hop-ip-address $site3_gw_private_ip -o none
az network route-table route create --address-prefix $s1spoke_vnet_address -n to-$s1spoke_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $s3spoke_vnet_name --next-hop-ip-address $site3_gw_private_ip -o none
az network route-table route create --address-prefix $s2spoke_vnet_address -n to-$s2spoke_vnet_name -g $rg --next-hop-type VirtualAppliance --route-table-name $s3spoke_vnet_name --next-hop-ip-address $site3_gw_private_ip -o none
az network vnet subnet update --vnet-name $s3spoke_vnet_name -n $s3spoke_vm_subnet_name --route-table $s3spoke_vnet_name -g $rg -o none

# clear up the cloudinit file
rm $cloudinit_file

#######################
# site1 VPN Config  #
#######################
echo -e "\e[1;36mCreating S2S/BGP VPN Config files for $site1_vnet_name-gw gateway VM...\e[0m"
# ipsec.secrets
psk_file=~/ipsec.secrets
cat <<EOF > $psk_file
$site1_gw_pubip $site2_gw_pubip : PSK $psk
$site1_gw_pubip $site3_gw_pubip : PSK $psk
EOF

# ipsec.conf
ipsec_file=~/ipsec.conf
cat <<EOF > $ipsec_file
conn %default
         # Authentication Method : Pre-Shared Key
         leftauth=psk
         rightauth=psk
         ike=aes256-sha1-modp1024!
         ikelifetime=28800s
         # Phase 1 Negotiation Mode : main
         aggressive=no
         esp=aes256-sha1!
         lifetime=3600s
         keylife=3600s
         type=tunnel
         dpddelay=10s
         dpdtimeout=30s
         keyexchange=ikev2
         rekey=yes
         reauth=no
         dpdaction=restart
         closeaction=restart
         leftsubnet=0.0.0.0/0,::/0
         rightsubnet=0.0.0.0/0,::/0
         leftupdown=/etc/strongswan.d/ipsec-vti.sh
         installpolicy=yes
         compress=no
         mobike=no
conn $site2_vnet_name-gw
         # OnPrem Gateway Private IP Address :
         left=$site1_gw_private_ip
         # OnPrem Gateway Public IP Address :
         leftid=$site1_gw_pubip
         # Azure VPN Gateway Public IP address :
         right=$site2_gw_pubip
         rightid=$site2_gw_pubip
         auto=start
         # unique number per IPSEC Tunnel eg. 100, 101 etc
         mark=101
conn $site3_vnet_name-gw
         # OnPrem Gateway Private IP Address :
         left=$site1_gw_private_ip
         # OnPrem Gateway Public IP Address :
         leftid=$site1_gw_pubip
         # Azure VPN Gateway Public IP address :
         right=$site3_gw_pubip
         rightid=$site3_gw_pubip
         auto=start
         # unique number per IPSEC Tunnel eg. 100, 101 etc
         mark=102
EOF


# ipsec-vti.sh
ipsec_vti_file=~/ipsec-vti.sh
tee $ipsec_vti_file > /dev/null <<'EOT'
#!/bin/bash
#
# /etc/strongswan.d/ipsec-vti.sh
#

IP=$(which ip)
IPTABLES=$(which iptables)
PLUTO_MARK_OUT_ARR=(${PLUTO_MARK_OUT//// })
PLUTO_MARK_IN_ARR=(${PLUTO_MARK_IN//// })
echo "`date` ${PLUTO_VERB} $VTI_INTERFACE" >> /tmp/vtitrace.log
case "$PLUTO_CONNECTION" in
  $site2_vnet_name-gw)
    VTI_INTERFACE=vti0
    VTI_LOCALADDR=$site1_gw_vti0/32
    VTI_REMOTEADDR=$site2_gw_vti0/32
    ;;
  $site3_vnet_name-gw)
    VTI_INTERFACE=vti1
    VTI_LOCALADDR=$site1_gw_vti0/32
    VTI_REMOTEADDR=$site3_gw_vti0/32
    ;;
esac
case "${PLUTO_VERB}" in
    up-client)
        $IP link add ${VTI_INTERFACE} type vti local ${PLUTO_ME} remote ${PLUTO_PEER} okey ${PLUTO_MARK_OUT_ARR[0]} ikey ${PLUTO_MARK_IN_ARR[0]}
        sysctl -w net.ipv4.conf.${VTI_INTERFACE}.disable_policy=1
        sysctl -w net.ipv4.conf.${VTI_INTERFACE}.rp_filter=2 || sysctl -w net.ipv4.conf.${VTI_INTERFACE}.rp_filter=0
        $IP addr add ${VTI_LOCALADDR} remote ${VTI_REMOTEADDR} dev ${VTI_INTERFACE}
        $IP link set ${VTI_INTERFACE} up mtu 1350
        $IPTABLES -t mangle -I FORWARD -o ${VTI_INTERFACE} -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
        $IPTABLES -t mangle -I INPUT -p esp -s ${PLUTO_PEER} -d ${PLUTO_ME} -j MARK --set-xmark ${PLUTO_MARK_IN}
        $IP route flush table 220
		    /etc/init.d/frr force-reload bgpd
        ;;
    down-client)
        $IP link del ${VTI_INTERFACE}
        $IPTABLES -t mangle -D FORWARD -o ${VTI_INTERFACE} -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
        $IPTABLES -t mangle -D INPUT -p esp -s ${PLUTO_PEER} -d ${PLUTO_ME} -j MARK --set-xmark ${PLUTO_MARK_IN}
        ;;
esac

# Enable IPv4 forwarding
sysctl -w net.ipv4.ip_forward=1
sysctl -w net.ipv4.conf.eth0.disable_xfrm=1
sysctl -w net.ipv4.conf.eth0.disable_policy=1
EOT

sed -i "/\$site2_vnet_name-gw/ s//$site2_vnet_name-gw/" $ipsec_vti_file
sed -i "/\$site3_vnet_name-gw/ s//$site3_vnet_name-gw/" $ipsec_vti_file
sed -i "/\$site1_gw_vti0/ s//$site1_gw_vti0/" $ipsec_vti_file
sed -i "/\$site2_gw_vti0/ s//$site2_gw_vti0/" $ipsec_vti_file
sed -i "/\$site3_gw_vti0/ s//$site3_gw_vti0/" $ipsec_vti_file


# frr.conf
frr_conf_file=~/frr.conf
cat <<EOF > $frr_conf_file
frr version 10.3
frr defaults traditional
hostname $site1_vnet_name-gw
log syslog informational
no ipv6 forwarding
service integrated-vtysh-config
!
ip route $advertised_address1 $site1_gw_nic_default_gw
ip route $site1_vnet_address $site1_gw_nic_default_gw
ip route $s1spoke_vnet_address $site1_gw_nic_default_gw
!
router bgp $site1_gw_asn
 bgp router-id $site1_gw_vti0
 no bgp ebgp-requires-policy
 neighbor $site2_gw_vti0 remote-as $site2_gw_asn
 neighbor $site2_gw_vti0 description $site2_vnet_name-gw
 neighbor $site2_gw_vti0 ebgp-multihop 2
 neighbor $site3_gw_vti0 remote-as $site3_gw_asn
 neighbor $site3_gw_vti0 description $site3_vnet_name-gw
 neighbor $site3_gw_vti0 ebgp-multihop 2
 !
 address-family ipv4 unicast
  network $advertised_address1
  network $site1_vnet_address
  network $s1spoke_vnet_address
  neighbor $site2_gw_vti0 soft-reconfiguration inbound
  neighbor $site3_gw_vti0 soft-reconfiguration inbound
 exit-address-family
exit
!
EOF

##### copy files to onprem gw
echo -e "\e[1;36mCopying and applying S2S/BGP VPN Config files to $site1_vnet_name-gw gateway VM...\e[0m"
scp -o StrictHostKeyChecking=no $psk_file $ipsec_file $ipsec_vti_file $frr_conf_file $site1_gw_pubip:/home/$admin_username
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo mv /home/$admin_username/frr.conf /etc/frr/frr.conf"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo mv /home/$admin_username/ipsec.* /etc/"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo mv /home/$admin_username/ipsec-vti.sh /etc/strongswan.d/"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo chmod +x /etc/strongswan.d/ipsec-vti.sh"

# clean up config files
rm $psk_file $ipsec_file $ipsec_vti_file $frr_conf_file

#######################
# site2 VPN Config  #
#######################
echo -e "\e[1;36mCreating S2S/BGP VPN Config files for $site2_vnet_name-gw gateway VM...\e[0m"
# ipsec.secrets
psk_file=~/ipsec.secrets
cat <<EOF > $psk_file
$site2_gw_pubip $site1_gw_pubip : PSK $psk
$site2_gw_pubip $site3_gw_pubip : PSK $psk
EOF

# ipsec.conf
ipsec_file=~/ipsec.conf
cat <<EOF > $ipsec_file
conn %default
         # Authentication Method : Pre-Shared Key
         leftauth=psk
         rightauth=psk
         ike=aes256-sha1-modp1024!
         ikelifetime=28800s
         # Phase 1 Negotiation Mode : main
         aggressive=no
         esp=aes256-sha1!
         lifetime=3600s
         keylife=3600s
         type=tunnel
         dpddelay=10s
         dpdtimeout=30s
         keyexchange=ikev2
         rekey=yes
         reauth=no
         dpdaction=restart
         closeaction=restart
         leftsubnet=0.0.0.0/0,::/0
         rightsubnet=0.0.0.0/0,::/0
         leftupdown=/etc/strongswan.d/ipsec-vti.sh
         installpolicy=yes
         compress=no
         mobike=no
conn $site1_vnet_name-gw
         # OnPrem Gateway Private IP Address :
         left=$site2_gw_private_ip
         # OnPrem Gateway Public IP Address :
         leftid=$site2_gw_pubip
         # Azure VPN Gateway Public IP address :
         right=$site1_gw_pubip
         rightid=$site1_gw_pubip
         auto=start
         # unique number per IPSEC Tunnel eg. 100, 101 etc
         mark=101
conn $site3_vnet_name-gw
         # OnPrem Gateway Private IP Address :
         left=$site2_gw_private_ip
         # OnPrem Gateway Public IP Address :
         leftid=$site2_gw_pubip
         # Azure VPN Gateway Public IP address :
         right=$site3_gw_pubip
         rightid=$site3_gw_pubip
         auto=start
         # unique number per IPSEC Tunnel eg. 100, 101 etc
         mark=102
EOF


# ipsec-vti.sh
ipsec_vti_file=~/ipsec-vti.sh
tee $ipsec_vti_file > /dev/null <<'EOT'
#!/bin/bash
#
# /etc/strongswan.d/ipsec-vti.sh
#

IP=$(which ip)
IPTABLES=$(which iptables)
PLUTO_MARK_OUT_ARR=(${PLUTO_MARK_OUT//// })
PLUTO_MARK_IN_ARR=(${PLUTO_MARK_IN//// })
echo "`date` ${PLUTO_VERB} $VTI_INTERFACE" >> /tmp/vtitrace.log
case "$PLUTO_CONNECTION" in
  $site1_vnet_name-gw)
    VTI_INTERFACE=vti0
    VTI_LOCALADDR=$site2_gw_vti0/32
    VTI_REMOTEADDR=$site1_gw_vti0/32
    ;;
  $site3_vnet_name-gw)
    VTI_INTERFACE=vti1
    VTI_LOCALADDR=$site2_gw_vti0/32
    VTI_REMOTEADDR=$site3_gw_vti0/32
    ;;
esac
case "${PLUTO_VERB}" in
    up-client)
        $IP link add ${VTI_INTERFACE} type vti local ${PLUTO_ME} remote ${PLUTO_PEER} okey ${PLUTO_MARK_OUT_ARR[0]} ikey ${PLUTO_MARK_IN_ARR[0]}
        sysctl -w net.ipv4.conf.${VTI_INTERFACE}.disable_policy=1
        sysctl -w net.ipv4.conf.${VTI_INTERFACE}.rp_filter=2 || sysctl -w net.ipv4.conf.${VTI_INTERFACE}.rp_filter=0
        $IP addr add ${VTI_LOCALADDR} remote ${VTI_REMOTEADDR} dev ${VTI_INTERFACE}
        $IP link set ${VTI_INTERFACE} up mtu 1350
        $IPTABLES -t mangle -I FORWARD -o ${VTI_INTERFACE} -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
        $IPTABLES -t mangle -I INPUT -p esp -s ${PLUTO_PEER} -d ${PLUTO_ME} -j MARK --set-xmark ${PLUTO_MARK_IN}
        $IP route flush table 220
		    /etc/init.d/frr force-reload bgpd
        ;;
    down-client)
        $IP link del ${VTI_INTERFACE}
        $IPTABLES -t mangle -D FORWARD -o ${VTI_INTERFACE} -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
        $IPTABLES -t mangle -D INPUT -p esp -s ${PLUTO_PEER} -d ${PLUTO_ME} -j MARK --set-xmark ${PLUTO_MARK_IN}
        ;;
esac

# Enable IPv4 forwarding
sysctl -w net.ipv4.ip_forward=1
sysctl -w net.ipv4.conf.eth0.disable_xfrm=1
sysctl -w net.ipv4.conf.eth0.disable_policy=1
EOT

sed -i "/\$site1_vnet_name-gw/ s//$site1_vnet_name-gw/" $ipsec_vti_file
sed -i "/\$site3_vnet_name-gw/ s//$site3_vnet_name-gw/" $ipsec_vti_file
sed -i "/\$site2_gw_vti0/ s//$site2_gw_vti0/" $ipsec_vti_file
sed -i "/\$site1_gw_vti0/ s//$site1_gw_vti0/" $ipsec_vti_file
sed -i "/\$site3_gw_vti0/ s//$site3_gw_vti0/" $ipsec_vti_file


# frr.conf
frr_conf_file=~/frr.conf
cat <<EOF > $frr_conf_file
frr version 10.3
frr defaults traditional
hostname $site1_vnet_name-gw
log syslog informational
no ipv6 forwarding
service integrated-vtysh-config
!
ip route $advertised_address2 $site2_gw_nic_default_gw
ip route $site2_vnet_address $site2_gw_nic_default_gw
ip route $s2spoke_vnet_address $site2_gw_nic_default_gw
!
router bgp $site2_gw_asn
 bgp router-id $site2_gw_vti0
 no bgp ebgp-requires-policy
 neighbor $site1_gw_vti0 remote-as $site1_gw_asn
 neighbor $site1_gw_vti0 description $site1_vnet_name-gw
 neighbor $site1_gw_vti0 ebgp-multihop 2
 neighbor $site3_gw_vti0 remote-as $site3_gw_asn
 neighbor $site3_gw_vti0 description $site3_vnet_name-gw
 neighbor $site3_gw_vti0 ebgp-multihop 2
 !
 address-family ipv4 unicast
  network $advertised_address2
  network $site2_vnet_address
  network $s2spoke_vnet_address
  neighbor $site1_gw_vti0 soft-reconfiguration inbound
  neighbor $site3_gw_vti0 soft-reconfiguration inbound
 exit-address-family
exit
!
EOF

##### copy files to onprem gw
echo -e "\e[1;36mCopying and applying S2S/BGP VPN Config files to $site2_vnet_name-gw gateway VM...\e[0m"
scp -o StrictHostKeyChecking=no $psk_file $ipsec_file $ipsec_vti_file $frr_conf_file $site2_gw_pubip:/home/$admin_username
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo mv /home/$admin_username/frr.conf /etc/frr/frr.conf"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo mv /home/$admin_username/ipsec.* /etc/"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo mv /home/$admin_username/ipsec-vti.sh /etc/strongswan.d/"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo chmod +x /etc/strongswan.d/ipsec-vti.sh"

# clean up config files
rm $psk_file $ipsec_file $ipsec_vti_file $frr_conf_file

#######################
# site3 VPN Config  #
#######################
echo -e "\e[1;36mCreating S2S/BGP VPN Config files for $site3_vnet_name-gw gateway VM...\e[0m"
# ipsec.secrets
psk_file=~/ipsec.secrets
cat <<EOF > $psk_file
$site3_gw_pubip $site1_gw_pubip : PSK $psk
$site3_gw_pubip $site2_gw_pubip : PSK $psk
EOF

# ipsec.conf
ipsec_file=~/ipsec.conf
cat <<EOF > $ipsec_file
conn %default
         # Authentication Method : Pre-Shared Key
         leftauth=psk
         rightauth=psk
         ike=aes256-sha1-modp1024!
         ikelifetime=28800s
         # Phase 1 Negotiation Mode : main
         aggressive=no
         esp=aes256-sha1!
         lifetime=3600s
         keylife=3600s
         type=tunnel
         dpddelay=10s
         dpdtimeout=30s
         keyexchange=ikev2
         rekey=yes
         reauth=no
         dpdaction=restart
         closeaction=restart
         leftsubnet=0.0.0.0/0,::/0
         rightsubnet=0.0.0.0/0,::/0
         leftupdown=/etc/strongswan.d/ipsec-vti.sh
         installpolicy=yes
         compress=no
         mobike=no
conn $site1_vnet_name-gw
         # OnPrem Gateway Private IP Address :
         left=$site3_gw_private_ip
         # OnPrem Gateway Public IP Address :
         leftid=$site3_gw_pubip
         # Azure VPN Gateway Public IP address :
         right=$site1_gw_pubip
         rightid=$site1_gw_pubip
         auto=start
         # unique number per IPSEC Tunnel eg. 100, 101 etc
         mark=101
conn $site2_vnet_name-gw
         # OnPrem Gateway Private IP Address :
         left=$site3_gw_private_ip
         # OnPrem Gateway Public IP Address :
         leftid=$site3_gw_pubip
         # Azure VPN Gateway Public IP address :
         right=$site2_gw_pubip
         rightid=$site2_gw_pubip
         auto=start
         # unique number per IPSEC Tunnel eg. 100, 101 etc
         mark=102
EOF


# ipsec-vti.sh
ipsec_vti_file=~/ipsec-vti.sh
tee $ipsec_vti_file > /dev/null <<'EOT'
#!/bin/bash
#
# /etc/strongswan.d/ipsec-vti.sh
#

IP=$(which ip)
IPTABLES=$(which iptables)
PLUTO_MARK_OUT_ARR=(${PLUTO_MARK_OUT//// })
PLUTO_MARK_IN_ARR=(${PLUTO_MARK_IN//// })
echo "`date` ${PLUTO_VERB} $VTI_INTERFACE" >> /tmp/vtitrace.log
case "$PLUTO_CONNECTION" in
  $site1_vnet_name-gw)
    VTI_INTERFACE=vti0
    VTI_LOCALADDR=$site3_gw_vti0/32
    VTI_REMOTEADDR=$site1_gw_vti0/32
    ;;
  $site2_vnet_name-gw)
    VTI_INTERFACE=vti1
    VTI_LOCALADDR=$site3_gw_vti0/32
    VTI_REMOTEADDR=$site2_gw_vti0/32
    ;;
esac
case "${PLUTO_VERB}" in
    up-client)
        $IP link add ${VTI_INTERFACE} type vti local ${PLUTO_ME} remote ${PLUTO_PEER} okey ${PLUTO_MARK_OUT_ARR[0]} ikey ${PLUTO_MARK_IN_ARR[0]}
        sysctl -w net.ipv4.conf.${VTI_INTERFACE}.disable_policy=1
        sysctl -w net.ipv4.conf.${VTI_INTERFACE}.rp_filter=2 || sysctl -w net.ipv4.conf.${VTI_INTERFACE}.rp_filter=0
        $IP addr add ${VTI_LOCALADDR} remote ${VTI_REMOTEADDR} dev ${VTI_INTERFACE}
        $IP link set ${VTI_INTERFACE} up mtu 1350
        $IPTABLES -t mangle -I FORWARD -o ${VTI_INTERFACE} -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
        $IPTABLES -t mangle -I INPUT -p esp -s ${PLUTO_PEER} -d ${PLUTO_ME} -j MARK --set-xmark ${PLUTO_MARK_IN}
        $IP route flush table 220
		    /etc/init.d/frr force-reload bgpd
        ;;
    down-client)
        $IP link del ${VTI_INTERFACE}
        $IPTABLES -t mangle -D FORWARD -o ${VTI_INTERFACE} -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
        $IPTABLES -t mangle -D INPUT -p esp -s ${PLUTO_PEER} -d ${PLUTO_ME} -j MARK --set-xmark ${PLUTO_MARK_IN}
        ;;
esac

# Enable IPv4 forwarding
sysctl -w net.ipv4.ip_forward=1
sysctl -w net.ipv4.conf.eth0.disable_xfrm=1
sysctl -w net.ipv4.conf.eth0.disable_policy=1
EOT

sed -i "/\$site2_vnet_name-gw/ s//$site2_vnet_name-gw/" $ipsec_vti_file
sed -i "/\$site1_vnet_name-gw/ s//$site1_vnet_name-gw/" $ipsec_vti_file
sed -i "/\$site1_gw_vti0/ s//$site1_gw_vti0/" $ipsec_vti_file
sed -i "/\$site2_gw_vti0/ s//$site2_gw_vti0/" $ipsec_vti_file
sed -i "/\$site3_gw_vti0/ s//$site3_gw_vti0/" $ipsec_vti_file


# frr.conf
frr_conf_file=~/frr.conf
cat <<EOF > $frr_conf_file
frr version 10.3
frr defaults traditional
hostname $site1_vnet_name-gw
log syslog informational
no ipv6 forwarding
service integrated-vtysh-config
!
ip route $advertised_address3 $site3_gw_nic_default_gw
ip route $site3_vnet_address $site3_gw_nic_default_gw
ip route $s3spoke_vnet_address $site3_gw_nic_default_gw
!
router bgp $site3_gw_asn
 bgp router-id $site3_gw_vti0
 no bgp ebgp-requires-policy
 neighbor $site2_gw_vti0 remote-as $site2_gw_asn
 neighbor $site2_gw_vti0 description $site2_vnet_name-gw
 neighbor $site2_gw_vti0 ebgp-multihop 2
 neighbor $site1_gw_vti0 remote-as $site1_gw_asn
 neighbor $site1_gw_vti0 description $site1_vnet_name-gw
 neighbor $site1_gw_vti0 ebgp-multihop 2
 !
 address-family ipv4 unicast
  network $advertised_address3
  network $site3_vnet_address
  network $s3spoke_vnet_address
  neighbor $site2_gw_vti0 soft-reconfiguration inbound
  neighbor $site1_gw_vti0 soft-reconfiguration inbound
 exit-address-family
exit
!
EOF

##### copy files to onprem gw
echo -e "\e[1;36mCopying and applying S2S/BGP VPN Config files to $site3_vnet_name-gw gateway VM...\e[0m"
scp -o StrictHostKeyChecking=no $psk_file $ipsec_file $ipsec_vti_file $frr_conf_file $site3_gw_pubip:/home/$admin_username
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo mv /home/$admin_username/frr.conf /etc/frr/frr.conf"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo mv /home/$admin_username/ipsec.* /etc/"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo mv /home/$admin_username/ipsec-vti.sh /etc/strongswan.d/"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo chmod +x /etc/strongswan.d/ipsec-vti.sh"

# clean up config files
rm $psk_file $ipsec_file $ipsec_vti_file $frr_conf_file

#############
# Diagnosis #
#############
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo systemctl restart ipsec && sudo systemctl enable ipsec"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo systemctl restart ipsec && sudo systemctl enable ipsec"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo systemctl restart ipsec && sudo systemctl enable ipsec"

echo -e "\e[1;36mChecking the IPsec VPN tunnel on $site1_vnet_name-gw gateway vm...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo ipsec statusall && ip a && ip route"

echo -e "\e[1;36mChecking the IPsec VPN tunnel on $site2_vnet_name-gw gateway vm...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo ipsec statusall && ip a && ip route"

echo -e "\e[1;36mChecking the IPsec VPN tunnel on $site3_vnet_name-gw gateway vm...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo ipsec statusall && ip a && ip route"

echo -e "\e[1;36mChecking BGP routing on $site1_vnet_name-gw gateway vm...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo vtysh -c 'show bgp summary' && sudo vtysh -c 'show bgp all' && sudo vtysh -c 'show int brief' && sudo vtysh -c 'show ip route'"

echo -e "\e[1;36mChecking received routes on $site1_vnet_name-gw from $site2_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo vtysh -c 'show ip bgp neighbors $site2_gw_vti0 received-routes'"

echo -e "\e[1;36mChecking received routes on $site1_vnet_name-gw from $site3_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo vtysh -c 'show ip bgp neighbors $site3_gw_vti0 received-routes'"

echo -e "\e[1;36mChecking advertised routes from $site1_vnet_name-gw to $site2_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo vtysh -c 'show ip bgp neighbors $site2_gw_vti0 advertised-routes'"

echo -e "\e[1;36mChecking advertised routes from $site1_vnet_name-gw to $site3_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "sudo vtysh -c 'show ip bgp neighbors $site3_gw_vti0 advertised-routes'"

echo -e "\e[1;36mChecking BGP routing on $site2_vnet_name-gw gateway vm...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo vtysh -c 'show bgp summary' && sudo vtysh -c 'show bgp all' && sudo vtysh -c 'show int brief' && sudo vtysh -c 'show ip route'"

echo -e "\e[1;36mChecking received routes on $site2_vnet_name-gw from $site1_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo vtysh -c 'show ip bgp neighbors $site1_gw_vti0 received-routes'"

echo -e "\e[1;36mChecking received routes on $site2_vnet_name-gw from $site3_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo vtysh -c 'show ip bgp neighbors $site3_gw_vti0 received-routes'"

echo -e "\e[1;36mChecking advertised routes from $site2_vnet_name-gw to $site1_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo vtysh -c 'show ip bgp neighbors $site1_gw_vti0 advertised-routes'"

echo -e "\e[1;36mChecking advertised routes from $site2_vnet_name-gw to $site3_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "sudo vtysh -c 'show ip bgp neighbors $site3_gw_vti0 advertised-routes'"

echo -e "\e[1;36mChecking BGP routing on $site3_vnet_name-gw gateway vm...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo vtysh -c 'show bgp summary' && sudo vtysh -c 'show bgp all' && sudo vtysh -c 'show int brief' && sudo vtysh -c 'show ip route'"

echo -e "\e[1;36mChecking received routes on $site3_vnet_name-gw from $site1_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo vtysh -c 'show ip bgp neighbors $site1_gw_vti0 received-routes'"
echo -e "\e[1;36mChecking received routes on $site3_vnet_name-gw from $site2_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo vtysh -c 'show ip bgp neighbors $site2_gw_vti0 received-routes'"

echo -e "\e[1;36mChecking advertised routes from $site3_vnet_name-gw to $site1_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo vtysh -c 'show ip bgp neighbors $site1_gw_vti0 advertised-routes'"
echo -e "\e[1;36mChecking advertised routes from $site3_vnet_name-gw to $site2_vnet_name-gw...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "sudo vtysh -c 'show ip bgp neighbors $site2_gw_vti0 advertised-routes'"

echo -e "\e[1;36mTring to checking reachability from $site1_vnet_name-gw vm to $site2_vnet_name and to $site3_vnet_name...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site1_gw_pubip "ping -c 3 $site2_gw_vti0 && ping -c 3 $site2_gw_private_ip && ping -c 3 $site2_vm_ip && ping -c 3 $site3_gw_vti0 && ping -c 3 $site3_gw_private_ip && ping -c 3 $site3_vm_ip && ping -c 3 $s1spoke_vm_ip && ping -c 3 $s2spoke_vm_ip && ping -c 3 $s3spoke_vm_ip"

echo -e "\e[1;36mTring to checking reachability from $site2_vnet_name-gw vm to $site1_vnet_name and to $site3_vnet_name...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site2_gw_pubip "ping -c 3 $site1_gw_vti0 && ping -c 3 $site1_gw_private_ip && ping -c 3 $site1_vm_ip && ping -c 3 $site3_gw_vti0 && ping -c 3 $site3_gw_private_ip && ping -c 3 $site3_vm_ip && ping -c 3 $s1spoke_vm_ip && ping -c 3 $s2spoke_vm_ip && ping -c 3 $s3spoke_vm_ip"

echo -e "\e[1;36mTring to checking reachability from $site3_vnet_name-gw vm to $site1_vnet_name and to $site2_vnet_name...\e[0m"
ssh -n -o BatchMode=yes -o StrictHostKeyChecking=no $site3_gw_pubip "ping -c 3 $site1_gw_vti0 && ping -c 3 $site1_gw_private_ip && ping -c 3 $site1_vm_ip && ping -c 3 $site2_gw_vti0 && ping -c 3 $site2_gw_private_ip && ping -c 3 $site2_vm_ip && ping -c 3 $s1spoke_vm_ip && ping -c 3 $s2spoke_vm_ip && ping -c 3 $s3spoke_vm_ip"

#cleanup
# az group delete -g $rg -y --no-wait